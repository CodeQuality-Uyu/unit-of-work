on:
  pull_request:
    branches:
    - develop
jobs:
  Publish:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Detect c# project updated
      run: |
      if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "CQ.UnitOfWork/"; then
        echo "C# project CQ.UnitOfWork updated."
      fi
      if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "CQ.UnitOfWork.Abstractions/"; then
        echo "C# project CQ.UnitOfWork Abstractions updated."
      fi
      if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "CQ.UnitOfWork.EfCore/"; then
        echo "C# project CQ.UnitOfWork EfCore updated."
      fi
      if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "CQ.UnitOfWork.EfCore.Abstractions/"; then
        echo "C# project CQ.UnitOfWork EfCore Abstractions updated."
      fi
      if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "CQ.UnitOfWork.MongoDriver/"; then
        echo "C# project CQ.UnitOfWork MongoDriver updated."
      fi
      if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "CQ.UnitOfWork.MongoDriver.Abstractions/"; then
        echo "C# project CQ.UnitOfWork MongoDriver Abstractions updated."
      fi

    # - name: Get Version from branch name
    #   id: version
    #   run: echo "VERSION=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_ENV

    # - name: Build
    #   run: dotnet build --configuration Release /p:Version=${VERSION}

    # - name: Pack
    #   run: dotnet pack --configuration Release /p:Version=${VERSION} --no-build --output .
      
    # - name: Push
    #   run: dotnet nuget push CQ.UnitOfWork.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_API_KEY}
    #   env:
    #     NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
